apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-io-{{.Replica}}
  annotations:
    # Disable CPU balance with CRIO
    irq-load-balancing.crio.io: "disable"
    cpu-load-balancing.crio.io: "disable"
    cpu-quota.crio.io: "disable"
  labels:
    group: load
    svc: storage-io-{{.Replica}}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: storage-io-{{.Replica}}
      redhat-best-practices-for-k8s.com/generic: target
  template:
    metadata:
      labels:
        group: load
        name: storage-io-{{.Replica}}
        redhat-best-practices-for-k8s.com/generic: target
    spec:
      runtimeClassName: performance-openshift-node-performance-profile
      containers:
        - image: "{{ .Image_stressng }}"
          imagePullPolicy: IfNotPresent
          name: storage-io-{{.Replica}}
          # Request and Limits must be identical for the Pod to be assigned to the QoS Guarantee
          resources:
            requests:
              cpu: 1
              memory: 1024M
              hugepages-1Gi: 16Gi
            limits:
              cpu: 1
              memory: 1024M
              hugepages-1Gi: 16Gi
          env:
            - name: stress_hdd
              value: "1"
          volumeMounts:
            {{ range  $volume := .volumes }}
            - name: {{ $volume.name }}
              mountPath: {{ $volume.path }}
            {{ end }}
            - name: hugepage
              mountPath: /hugepages
        - name: nginx
          image: "{{ .Image_nginx }}"
          resources:
            requests:
              cpu: 1
              memory: 256Mi
            limits:
              cpu: 1
              memory: 256Mi
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 60
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 60
      dnsPolicy: Default
      terminationGracePeriodSeconds: 1
      volumes:
        {{ range  $volume := .volumes }}
        - name: {{ $volume.name }}
          {{ if eq $volume.type "configMap" }}
          configMap:
            name: {{ $volume.name }}
          {{ else if eq $volume.type "secret" }}
          secret:
            secretName: {{ $volume.name }}
          {{ else if eq $volume.type "persistentVolumeClaim" }}
          persistentVolumeClaim:
            claimName: {{ $volume.name }}
          {{ end }}
        {{ end }}
        - name: hugepage
          emptyDir:
            medium: HugePages
        - name: stress-storage
          persistentVolumeClaim:
            claimName: storage-io-pvc-{{.Replica}}